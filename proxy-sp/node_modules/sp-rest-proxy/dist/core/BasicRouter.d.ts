import { Request, Response, NextFunction } from 'express';
import { SPClient, SPResponse, FetchError } from '../utils/client';
import { UrlUtils } from '../utils/url';
import { Logger } from '../utils/logger';
import { IProxyContext, IProxySettings } from './interfaces';
export declare class BasicRouter {
    ctx: IProxyContext;
    settings: IProxySettings;
    sp: SPClient;
    url: UrlUtils;
    logger: Logger;
    constructor(ctx: IProxyContext, settings: IProxySettings);
    router: (req: Request, r: Response, next?: NextFunction) => void;
    handlers: {
        isOK: (resp: SPResponse) => Promise<SPResponse>;
        response: (r: Response) => (resp: SPResponse, bodyReader?: (r: SPResponse) => Promise<any>) => Promise<void>;
        error: (r: Response) => (err: FetchError) => void;
    };
}
