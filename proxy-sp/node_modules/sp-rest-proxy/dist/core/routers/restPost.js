"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.RestPostRouter = void 0;
var node_fetch_1 = require("node-fetch");
var BasicRouter_1 = require("../BasicRouter");
var headers_1 = require("../../utils/headers");
var RestPostRouter = (function (_super) {
    __extends(RestPostRouter, _super);
    function RestPostRouter(context, settings) {
        var _this = _super.call(this, context, settings) || this;
        _this.router = function (request, response) {
            var endpointUrl = _this.url.apiEndpoint(request);
            _this.logger.info('\nPOST: ' + endpointUrl);
            var reqBody = '';
            if (request.body) {
                reqBody = request.body;
                _this.processPostRequest(reqBody, request, response);
            }
            else {
                request.on('data', function (chunk) { return reqBody += chunk; });
                request.on('end', function () { return _this.processPostRequest(reqBody, request, response); });
            }
        };
        _this.processPostRequest = function (body, req, res) {
            var endpointUrl = _this.url.apiEndpoint(req);
            _this.logger.verbose('Request body:', body);
            var headers = headers_1.getHeaders(req.headers);
            if (_this.isDocumentEndpoint(endpointUrl)) {
                body = req.buffer;
                if (body) {
                    headers.set('Content-Length', "" + body.byteLength);
                }
            }
            if (typeof body === 'object' && Object.keys(body).length === 0) {
                if (endpointUrl.toLowerCase().indexOf('/_vti_bin/client.svc') !== -1 ||
                    endpointUrl.toLowerCase().indexOf('/_api/contextinfo') !== -1) {
                    body = '{}';
                }
                Object.keys(headers).forEach(function (prop) {
                    if (prop.toLowerCase() === 'content-length') {
                        headers.delete(prop);
                    }
                });
            }
            if (typeof body === 'object' && !_this.isDocumentEndpoint(endpointUrl)) {
                body = JSON.stringify(body);
            }
            _this.sp.fetch(endpointUrl, { method: 'POST', headers: headers, body: body })
                .then(_this.handlers.isOK)
                .then(function (r) { return __awaiter(_this, void 0, void 0, function () {
                var ct, body_1, ex_1;
                var _a, _b, _c;
                return __generator(this, function (_d) {
                    switch (_d.label) {
                        case 0:
                            ct = new node_fetch_1.Headers(r.headers).get('content-type') || '';
                            if (ct.toLowerCase().indexOf('application/json') !== 0) {
                                return [2, r];
                            }
                            _d.label = 1;
                        case 1:
                            _d.trys.push([1, 3, , 4]);
                            return [4, r.json()];
                        case 2:
                            body_1 = _d.sent();
                            if (typeof body_1['odata.nextLink'] === 'string') {
                                body_1['odata.nextLink'] = this.url.proxyEndpoint(body_1['odata.nextLink']);
                            }
                            if (typeof ((_a = body_1.d) === null || _a === void 0 ? void 0 : _a.__next) === 'string') {
                                body_1.d.__next = this.url.proxyEndpoint(body_1.d.__next);
                            }
                            if (typeof body_1['odata.metadata'] === 'string') {
                                body_1['odata.metadata'] = this.url.proxyEndpoint(body_1['odata.metadata']);
                            }
                            if ((_c = (_b = body_1 === null || body_1 === void 0 ? void 0 : body_1.d) === null || _b === void 0 ? void 0 : _b.__metadata) === null || _c === void 0 ? void 0 : _c.uri) {
                                body_1.d.__metadata.uri = this.url.proxyEndpoint(body_1.d.__metadata.uri);
                            }
                            return [2, new node_fetch_1.Response(JSON.stringify(body_1), r)];
                        case 3:
                            ex_1 = _d.sent();
                            this.logger.error(ex_1);
                            return [3, 4];
                        case 4: return [2, r];
                    }
                });
            }); })
                .then(_this.handlers.response(res))
                .catch(_this.handlers.error(res));
        };
        _this.isDocumentEndpoint = function (endpointUrl) {
            if (endpointUrl.toLowerCase().indexOf('/attachmentfiles/add') !== -1 ||
                endpointUrl.toLowerCase().indexOf('/files/add') !== -1 ||
                endpointUrl.toLowerCase().indexOf('/startupload') !== -1 ||
                endpointUrl.toLowerCase().indexOf('/continueupload') !== -1 ||
                endpointUrl.toLowerCase().indexOf('/finishupload') !== -1) {
                return true;
            }
            return false;
        };
        return _this;
    }
    return RestPostRouter;
}(BasicRouter_1.BasicRouter));
exports.RestPostRouter = RestPostRouter;
//# sourceMappingURL=restPost.js.map