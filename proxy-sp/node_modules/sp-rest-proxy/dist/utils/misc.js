"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.waitForCondition = exports.trimMultiline = exports.getCaseInsensitiveProp = exports.checkNestedProperties = exports.generateGuid = void 0;
var generateGuid = function () {
    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {
        var r = Math.random() * 16 | 0;
        var v = c === 'x' ? r : (r & 0x3 | 0x8);
        return v.toString(16);
    });
};
exports.generateGuid = generateGuid;
var checkNestedProperties = function (object) {
    var args = [];
    for (var _i = 1; _i < arguments.length; _i++) {
        args[_i - 1] = arguments[_i];
    }
    args.forEach(function (arg) {
        if (!object || !object.hasOwnProperty(arg)) {
            return false;
        }
        object = object[arg];
    });
    return true;
};
exports.checkNestedProperties = checkNestedProperties;
var getCaseInsensitiveProp = function (object, propertyName) {
    propertyName = propertyName.toLowerCase();
    return Object.keys(object).reduce(function (res, prop) {
        if (prop.toLowerCase() === propertyName) {
            res = object[prop];
        }
        return res;
    }, undefined);
};
exports.getCaseInsensitiveProp = getCaseInsensitiveProp;
var trimMultiline = function (multiline) {
    return multiline.trim().split('\n').map(function (line) { return line.trim(); }).join('\n');
};
exports.trimMultiline = trimMultiline;
var waitForCondition = function (cond, timeout, tries) {
    if (timeout === void 0) { timeout = 100; }
    if (tries === void 0) { tries = 50; }
    return new Promise(function (resolve, reject) {
        if (cond()) {
            return resolve();
        }
        tries -= 1;
        if (tries === 0) {
            return reject(new Error('No more tries left'));
        }
        setTimeout(function () { return resolve(exports.waitForCondition(cond, timeout, tries)); }, timeout);
    });
};
exports.waitForCondition = waitForCondition;
//# sourceMappingURL=misc.js.map